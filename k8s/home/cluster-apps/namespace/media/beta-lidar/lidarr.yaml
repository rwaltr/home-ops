---
apiVersion: v1
kind: Service
metadata:
  name: lidarr
  namespace: media
spec:
  type: ClusterIP
  ports:
    - port: 8686
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: lidarr
    app.kubernetes.io/instance: lidarr
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: lidarr
  namespace: media
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app.kubernetes.io/name: lidarr
      app.kubernetes.io/instance: lidarr
  template:
    metadata:
      labels:
        app.kubernetes.io/name: lidarr
        app.kubernetes.io/instance: lidarr
    spec:
      serviceAccountName: default
      dnsPolicy: ClusterFirst
      enableServiceLinks: true
      containers:
      - name: lidarr
        image: "linuxserver/lidarr:version-0.8.0.1886"
        imagePullPolicy: IfNotPresent
        ports:
        - name: http
          containerPort: 8686
          protocol: TCP
        volumeMounts:
          - mountPath: /config
            name: config
          - mountPath: /music
            name: music
          - mountPath: /downloads
            name: downloads
            readOnly: True
        env:
          - name: "PUID"
            value: "1000"
          - name: "PGID"
            value: "1000"
        livenessProbe:
          exec:
            command:
            - /usr/bin/env
            - bash
            - -c
            - curl --fail localhost:8686/api/v1/system/status?apiKey=`IFS=\> && while read -d
              \< E C; do if [[ $E = "ApiKey" ]]; then echo $C; fi; done < /config/config.xml`
          failureThreshold: 5
          initialDelaySeconds: 60
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 10
        readinessProbe:
          tcpSocket:
            port: http
          initialDelaySeconds: 0
          failureThreshold: 3
          timeoutSeconds: 1
          periodSeconds: 10
        startupProbe:
          tcpSocket:
            port: http
          initialDelaySeconds: 0
          failureThreshold: 30
          timeoutSeconds: 1
          periodSeconds: 5
      volumes:
        - name: config
          persistentVolumeClaim:
            claimName: lidarr-config
        - name: music
          nfs:
            path: /tank/nas/library/music
            server: 10.10.0.8
        - name: downloads
          nfs:
            path: /tank/nas/library/downloads
            server: 10.10.0.8
