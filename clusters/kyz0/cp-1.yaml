# Indicates the schema used to decode the contents.
version: v1alpha1
# Enable verbose logging to the console.
debug: false
# Indicates whether to pull the machine config upon every boot.
persist: true
# Provides machine specific configuration options.
machine:
  # Defines the role of the machine within the cluster.
  type: controlplane
  # The `token` is used by a machine to join the PKI of the cluster.
  token: ENC[AES256_GCM,data:CgQX5edZ4Q91ZBtITabITO+sgbQRc+Y=,iv:8AksNn1styjk4NqZf46P4QcVgoiIDIFxbXemnMxSDHM=,tag:hS6EMfhDdO8tSBTgZ6+uGA==,type:str]
  # The root certificate authority of the PKI.
  ca:
    crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJQekNCOHFBREFnRUNBaEVBempXWG1OSXR4K3I3NDhrdTJSdTFYREFGQmdNclpYQXdFREVPTUF3R0ExVUUKQ2hNRmRHRnNiM013SGhjTk1qSXdNakkyTWpBek56TTNXaGNOTXpJd01qSTBNakF6TnpNM1dqQVFNUTR3REFZRApWUVFLRXdWMFlXeHZjekFxTUFVR0F5dGxjQU1oQUcrSW1oUHF4VUJrUUdIMEZTa0FvWVNaUXNROGNpc3NVYUZGCnpMd1FuSnV4bzJFd1h6QU9CZ05WSFE4QkFmOEVCQU1DQW9Rd0hRWURWUjBsQkJZd0ZBWUlLd1lCQlFVSEF3RUcKQ0NzR0FRVUZCd01DTUE4R0ExVWRFd0VCL3dRRk1BTUJBZjh3SFFZRFZSME9CQllFRkRIbVhuY08yd2Y3OXQzdwpaVVdhdFZkOS9wclJNQVVHQXl0bGNBTkJBTWhxcXZmbVRlblIySlliaVIvSzQ3dndEV1JYSFdOOUVlcWNqNnlPCkVPY2dUNm9pZTRWVzV1ckt2SmFUbWh1U0JvMGpxeE5uZkQ2dXNKVmZpL0hON2d3PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
    key: ENC[AES256_GCM,data:9ENsDN/5Fb2IcBrhoH0F3df2jGd1eaaMHTnaVw5C31/kVoTgM1Vrj6s+4At3tlhOyThYsJPzCtRwHaQJVlLbO359CmpYbMfFxAkFbilsysKhcjYvniXY0gA9J6Z+0/24VCCd5sQ5X1Ofpl7uH3sMXQ7e2TzTMN0q54W9KhH+Z0D2dVhIwUg8VYpduILd2lzeOU+MmuUF3laEruzhomvd/xEqkmUWuNUoZeQIe9r65e3BM6mO,iv:SGZjJKGyxBreDKhFx9alB1d1ZN/LrIcltRWASCvz9Oc=,tag:RSqeBtZZ3SgdUdsGpwUBFg==,type:str]
  # Extra certificate subject alternative names for the machine's certificate.
  certSANs: []
  #   # Uncomment this to enable SANs.
  #   - 10.0.0.10
  #   - 172.16.0.10
  #   - 192.168.0.10
  # Used to provide additional options to the kubelet.
  kubelet: {}
  # # The `image` field is an optional reference to an alternative kubelet image.
  # image: ghcr.io/talos-systems/kubelet:v1.23.1
  # # The `ClusterDNS` field is an optional reference to an alternative kubelet clusterDNS ip list.
  # clusterDNS:
  #     - 10.96.0.10
  #     - 169.254.2.53
  # # The `extraArgs` field is used to provide additional flags to the kubelet.
  # extraArgs:
  #     key: value
  # # The `extraMounts` field is used to add additional mounts to the kubelet container.
  # extraMounts:
  #     - destination: /var/lib/example
  #       type: bind
  #       source: /var/lib/example
  #       options:
  #         - bind
  #         - rshared
  #         - rw
  # # The `nodeIP` field is used to configure `--node-ip` flag for the kubelet.
  # nodeIP:
  #     # The `validSubnets` field configures the networks to pick kubelet node IP from.
  #     validSubnets:
  #         - 10.0.0.0/8
  #         - '!10.0.0.3/32'
  #         - fdc7::/16
  # Provides machine specific network configuration options.
  network:
    # # `interfaces` is used to define the network interface configuration.
    interfaces:
      # The interface name.
      - interface: eth0
        #       # Assigns static IP addresses to the interface.
        addresses:
          - 10.10.0.9/24
        #       # A list of routes associated with the interface.
        routes:
          # The route's network.
          - network: 0.0.0.0/0
            # The route's gateway.
            gateway: 10.10.0.1
            # metric: 1024 # The optional metric for the route.
        # The interface's MTU.
        mtu: 1500
        #
        #       # # Bond specific options.
        #       # bond:
        #       #     # The interfaces that make up the bond.
        #       #     interfaces:
        #       #         - eth0
        #       #         - eth1
        #       #     mode: 802.3ad # A bond option.
        #       #     lacpRate: fast # A bond option.
    #       # # Indicates if DHCP should be used to configure the interface.
    #       # dhcp: true
    #       # # DHCP specific options.
    #       # dhcpOptions:
    #       #     routeMetric: 1024 # The priority of all routes received via DHCP.
    #       # # Wireguard specific configuration.
    #       # # wireguard server example
    #       # wireguard:
    #       #     privateKey: ABCDEF... # Specifies a private key configuration (base64 encoded).
    #       #     listenPort: 51111 # Specifies a device's listening port.
    #       #     # Specifies a list of peer configurations to apply to a device.
    #       #     peers:
    #       #         - publicKey: ABCDEF... # Specifies the public key of this peer.
    #       #           endpoint: 192.168.1.3 # Specifies the endpoint of this peer entry.
    #       #           # AllowedIPs specifies a list of allowed IP addresses in CIDR notation for this peer.
    #       #           allowedIPs:
    #       #             - 192.168.1.0/24
    #       # # wireguard peer example
    #       # wireguard:
    #       #     privateKey: ABCDEF... # Specifies a private key configuration (base64 encoded).
    #       #     # Specifies a list of peer configurations to apply to a device.
    #       #     peers:
    #       #         - publicKey: ABCDEF... # Specifies the public key of this peer.
    #       #           endpoint: 192.168.1.2 # Specifies the endpoint of this peer entry.
    #       #           persistentKeepaliveInterval: 10s # Specifies the persistent keepalive interval for this peer.
    #       #           # AllowedIPs specifies a list of allowed IP addresses in CIDR notation for this peer.
    #       #           allowedIPs:
    #       #             - 192.168.1.0/24
    #       # # Virtual (shared) IP address configuration.
    # vip:
    # ip: 10.10.0.9
    # # Used to statically set the nameservers for the machine.
    nameservers:
      - 192.168.1.1
      - 8.8.8.8
      - 1.1.1.1
  # # Allows for extra entries to be added to the `/etc/hosts` file
  # extraHostEntries:
  #     - ip: 192.168.1.100 # The IP of the host.
  #       # The host alias.
  #       aliases:
  #         - example
  #         - example.domain.tld
  # # Configures KubeSpan feature.
  # kubespan:
  #     enabled: true # Enable the KubeSpan feature.
  # Used to provide instructions for installations.
  install:
    # The disk used for installations.
    disk: /dev/sda
    # Allows for supplying the image used to perform the installation.
    image: ghcr.io/talos-systems/installer:v0.14.2
    # Indicates if a bootloader should be installed.
    bootloader: true
    # Indicates if the installation disk should be wiped at installation time.
    wipe: false
    # # Look up disk using disk attributes like model, size, serial and others.
    # diskSelector:
    #     size: 4GB # Disk size.
    #     model: WDC* # Disk model `/sys/block/<dev>/device/model`.
    # # Allows for supplying extra kernel args via the bootloader.
    # extraKernelArgs:
    #     - talos.platform=metal
    #     - reboot=k
  # Features describe individual Talos features that can be switched on or off.
  features:
    # Enable role-based access control (RBAC).
    rbac: true
    # # Provides machine specific contolplane configuration options.
    # # ControlPlane definition example.
    # controlPlane:
    #     # Controller manager machine specific configuration options.
    #     controllerManager:
    #         disabled: false # Disable kube-controller-manager on the node.
    #     # Scheduler machine specific configuration options.
    #     scheduler:
    #         disabled: true # Disable kube-scheduler on the node.
    # # Used to partition, format and mount additional disks.
    # # MachineDisks list example.
    # disks:
    #     - device: /dev/sdb # The name of the disk to use.
    #       # A list of partitions to create on the disk.
    #       partitions:
    #         - mountpoint: /var/mnt/extra # Where to mount the partition.
    #
    #           # # The size of partition: either bytes or human readable representation. If `size:` is omitted, the partition is sized to occupy the full disk.
    #           # # Human readable representation.
    #           # size: 100 MB
    #           # # Precise value in bytes.
    #           # size: 1073741824
    # # Allows the addition of user specified files.
    # # MachineFiles usage example.
    # files:
    #     - content: '...' # The contents of the file.
    #       permissions: 0o666 # The file's permissions in octal.
    #       path: /tmp/file.txt # The path of the file.
    #       op: append # The operation to use
    # # The `env` field allows for the addition of environment variables.
    # # Environment variables definition examples.
    # env:
    #     GRPC_GO_LOG_SEVERITY_LEVEL: info
    #     GRPC_GO_LOG_VERBOSITY_LEVEL: "99"
    #     https_proxy: http://SERVER:PORT/
    # env:
    #     GRPC_GO_LOG_SEVERITY_LEVEL: error
    #     https_proxy: https://USERNAME:PASSWORD@SERVER:PORT/
    # env:
    #     https_proxy: http://DOMAIN\USERNAME:PASSWORD@SERVER:PORT/
    # # Used to configure the machine's time settings.
    # # Example configuration for cloudflare ntp server.
    # time:
    #     disabled: false # Indicates if the time service is disabled for the machine.
    #     # Specifies time (NTP) servers to use for setting the system time.
    #     servers:
    #         - time.cloudflare.com
    #     bootTimeout: 2m0s # Specifies the timeout when the node time is considered to be in sync unlocking the boot sequence.
    # # Used to configure the machine's sysctls.
    # # MachineSysctls usage example.
    # sysctls:
    #     kernel.domainname: talos.dev
    #     net.ipv4.ip_forward: "0"
    # # Used to configure the machine's container image registry mirrors.
    # registries:
    #     # Specifies mirror configuration for each registry.
    #     mirrors:
    #         ghcr.io:
    #             # List of endpoints (URLs) for registry mirrors to use.
    #             endpoints:
    #                 - https://registry.insecure
    #                 - https://ghcr.io/v2/
    #     # Specifies TLS & auth configuration for HTTPS image registries.
    #     config:
    #         registry.insecure:
    #             # The TLS configuration for the registry.
    #             tls:
    #                 insecureSkipVerify: true # Skip TLS server certificate verification (not recommended).
    #
    #                 # # Enable mutual TLS authentication with the registry.
    #                 # clientIdentity:
    #                 #     crt: TFMwdExTMUNSVWRKVGlCRFJWSlVTVVpKUTBGVVJTMHRMUzB0Q2sxSlNVSklla05DTUhGLi4u
    #                 #     key: TFMwdExTMUNSVWRKVGlCRlJESTFOVEU1SUZCU1NWWkJWRVVnUzBWWkxTMHRMUzBLVFVNLi4u
    #
    #             # # The auth configuration for this registry.
    #             # auth:
    #             #     username: username # Optional registry authentication.
    #             #     password: password # Optional registry authentication.
    # # Machine system disk encryption configuration.
    # systemDiskEncryption:
    #     # Ephemeral partition encryption.
    #     ephemeral:
    #         provider: luks2 # Encryption provider to use for the encryption.
    #         # Defines the encryption keys generation and storage method.
    #         keys:
    #             - # Deterministically generated key from the node UUID and PartitionLabel.
    #               nodeID: {}
    #               slot: 0 # Key slot number for LUKS2 encryption.
    #
    #         # # Cipher kind to use for the encryption. Depends on the encryption provider.
    #         # cipher: aes-xts-plain64
    #         # # Defines the encryption sector size.
    #         # blockSize: 4096
    #         # # Additional --perf parameters for the LUKS2 encryption.
    #         # options:
    #         #     - no_read_workqueue
    #         #     - no_write_workqueue
    # # Configures the udev system.
    # udev:
    #     # List of udev rules to apply to the udev system
    #     rules:
    #         - SUBSYSTEM=="drm", KERNEL=="renderD*", GROUP="44", MODE="0660"
    # # Configures the logging system.
    # logging:
    #     # Logging destination.
    #     destinations:
    #         - endpoint: tcp://1.2.3.4:12345 # Where to send logs. Supported protocols are "tcp" and "udp".
    #           format: json_lines # Logs format.
# Provides cluster specific configuration options.
cluster:
  # Globally unique identifier for this cluster (base64 encoded random 32 bytes).
  id: q6MiJqspNjyutEmm3WMK0uZ59w9twWGgPvI9EF1n2j8=
  # Shared secret of cluster (base64 encoded random 32 bytes).
  secret: ENC[AES256_GCM,data:RrUkLCmKBpnksFlQxPzopQeL6G4TSJsDuayb2PG9L4BNT8kt6cfKx4ff27s=,iv:Mx93HztwSbond69TLX3FEXeCcnsJVPliEiWpLKULGEA=,tag:hpejqWMSy4UP1VD4mODmqA==,type:str]
  # Provides control plane specific configuration options.
  controlPlane:
    # Endpoint is the canonical controlplane endpoint, which can be an IP address or a DNS hostname.
    endpoint: https://10.10.0.9:6443
  # Configures the cluster's name.
  clusterName: kyz
  # Provides cluster specific network configuration options.
  network:
    # The domain used by Kubernetes DNS.
    dnsDomain: cluster.local
    # The pod subnet CIDR.
    podSubnets:
      - 10.244.0.0/16
    # The service subnet CIDR.
    serviceSubnets:
      - 10.96.0.0/12
    # # The CNI used.
    cni:
      # Name of CNI to use.
      name: none
      #     # URLs containing manifests to apply for the CNI.
      #     urls:
      #         - https://raw.githubusercontent.com/cilium/cilium/v1.8/install/kubernetes/quick-install.yaml
  # The [bootstrap token](https://kubernetes.io/docs/reference/access-authn-authz/bootstrap-tokens/) used to join the cluster.
  token: ENC[AES256_GCM,data:F7pZHcBM/SwobQ7qvW11Txzi7040W+E=,iv:rT2rUmftv6EY5qaxTT+nloFXl22OP1L0Q9aVkbrpIWc=,tag:ltDS9oa5JnOkEatsgBWn2A==,type:str]
  # The key used for the [encryption of secret data at rest](https://kubernetes.io/docs/tasks/administer-cluster/encrypt-data/).
  aescbcEncryptionSecret: ENC[AES256_GCM,data:ZI/9cDx/Dfs0IXslocwGtwgYLXMQ8jCcqMc5trM0G2+L85SKZT9ZbRN9jVU=,iv:B7DF5A3+fwT05j/xJwVVUisS8OJGIsE8pZMVYcUx+yU=,tag:ZKZKZr4M5cIwMhcqP6heyQ==,type:str]
  # The base64 encoded root certificate authority used by Kubernetes.
  ca:
    crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJpekNDQVRDZ0F3SUJBZ0lSQU83Rm9TWTc1eWNNOE5GWk5LajV6N293Q2dZSUtvWkl6ajBFQXdJd0ZURVQKTUJFR0ExVUVDaE1LYTNWaVpYSnVaWFJsY3pBZUZ3MHlNakF5TWpZeU1ETTNNemRhRncwek1qQXlNalF5TURNMwpNemRhTUJVeEV6QVJCZ05WQkFvVENtdDFZbVZ5Ym1WMFpYTXdXVEFUQmdjcWhrak9QUUlCQmdncWhrak9QUU1CCkJ3TkNBQVNZNEN0UEdXUGl2eEdvZk42cCtTcGYrL1ZGZ1JEenVZVGtJeEFJbGFESnp3NU53M3dnZnFxTG5XNlcKTmZKdGFaNVJqMHhhOVVRd25OMlRUbDBNSW9lem8yRXdYekFPQmdOVkhROEJBZjhFQkFNQ0FvUXdIUVlEVlIwbApCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUZNQU1CQWY4d0hRWURWUjBPCkJCWUVGR2ZNRjJzVElKSEs1N20wbGFSTk5rcTRXRmZrTUFvR0NDcUdTTTQ5QkFNQ0Ewa0FNRVlDSVFDRE54MmIKRnZhR3ZvR0Rnc2JiVEVPZDZwTE0veUcvVXBBOU9WdFpYTmxCd1FJaEFLd1NWb0RxdTNLZzBCWHZhbW82OFZhOQpuSjlqZUhmOGZBSzA5dGRzY1FCYgotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
    key: ENC[AES256_GCM,data:criJSADO/915OcSRvsVtxyACVeNKfkuwVMLYgce1hlY+gR1xsiZemISiYmWOeImnMisN2SJuS2YnSMC3UEDJ2MUZF27h85nXycZ9DhIASNtSr7CDSnFy+IZFVY3SHyYrUQpsQLPkQjTv9Zpra1+yAivfYRZ7wdhWt/jsxvcV7z7qJmhLWCbJvl3KVbwEiDCvqucyJwGXlJ4Ibpnt6KGk8PYBHW4yph5V+Es9wgz2YMiiKpZr2k+4itOQtko6hFVIvZEeSjhp8/QpMupgXwp6JwzUwg0JAXkQfkLTtI8NC7TuqttKVYSdVjjvmA3vo08i+Rr1Co7vYe3ERrb1h/LUX586ghYiw9UAIsDo5C+Jp4JHCA8asRdXo6f1zbWMR5lZvRzVJNc/vGYH4mPifGZL+g==,iv:nYUNlXnT5HlA+1m8dCEO2jaezn4SlKJn6NQsiqM7ZSY=,tag:Hk8tiA/0otFhGZyNmjhxPA==,type:str]
  # The base64 encoded aggregator certificate authority used by Kubernetes for front-proxy certificate generation.
  aggregatorCA:
    crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJYekNDQVFhZ0F3SUJBZ0lSQUp3KzVlWG9UbHpCVUdNQTY2NlYxcFV3Q2dZSUtvWkl6ajBFQXdJd0FEQWUKRncweU1qQXlNall5TURNM016ZGFGdzB6TWpBeU1qUXlNRE0zTXpkYU1BQXdXVEFUQmdjcWhrak9QUUlCQmdncQpoa2pPUFFNQkJ3TkNBQVNwY1VXMVhFN1NNNGp0d3YzbEdVNVF1UitrZmJUZUkwOEdJdG16U0NVbUhtWDBMN1l1Cll4VHRlV0Rjd1Q2a1M2UjlYN2lWQXM1dHBUeUJiaUlxVHVxQm8yRXdYekFPQmdOVkhROEJBZjhFQkFNQ0FvUXcKSFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUZNQU1CQWY4dwpIUVlEVlIwT0JCWUVGTlpsL3U2OGt3NnFVTTh1OUlWWGxMMWcxNUlWTUFvR0NDcUdTTTQ5QkFNQ0EwY0FNRVFDCklEOXJNajYxaGphaUxkQ1VGeWZJZm1hMnFBMkx0WTV6N1gxWkxDOHo3TWExQWlCU0hycmVnbCtLcGlOOU9lcVkKNTRtUEdpTmk4aTZhYUFIZCtwUEdTcEFXK0E9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
    key: ENC[AES256_GCM,data:z60LbMggtfYduQ6E4kttqq5SY89C2Gr/uPYE0VDdQOuE2YndorJag7+dZEDbhBhtjVasEer4fMapYcmy8QGR4aTNQ5pGY4WAGyd/kOYVE9TrEr37hwQKUgziKz6vgGrjrNS96PqZX4/plVYrMkn3tNQKGD+cz1PY/FPONm8vFCtvZYkks5jxpR95tb+IhGOifGcD1DlTRfK/6FlE5gEwnlwZEmEOe1J1wEo3EsQftRpjg2H0ztPot3Aqu3V8PnC5LeuL/qlZC2lS59PIWGoBLrjIwxilVXbCR3nWGJYb/OS9sUHX8Qypi27rCC/QjDF0aP1n8/D0d/CiA5k21JZ4iA+KXVyez3/RsCR8MEGwWsgua6ZK6dTpEhX4pcxrgUflO2sk4s8DGNArAPFAGegPeg==,iv:TQx3Mo5l7zniQg0F6QnM7SM1sqOYVVAMlpa3RcXldn4=,tag:Oat7kt1zHqIcqwYiu8osSw==,type:str]
  # The base64 encoded private key for service account token generation.
  serviceAccount:
    key: ENC[AES256_GCM,data:t+dwdS+Vb/sDenBMI8QilCeRoIhWCfqGW8Brq7670GzsteVOXBX1J0IhNx/Rh9SLPYFWSN6us/XLAW4wwQa//2yYdkRNePN3L97mjottEu6tO1O0RTWNw5Azc7fLrKh4bO3GHWPHPUyOkc3O+49Xhv485bbIhlaJ/vo9bPIOMm3bs1409bQeSoUBZEt7bpY/OZTPkDn7VmIugNKm3ZIiBAaEBiMoo9m/uBYY2Qoau5kGNXNnBbssRjJ/EfL1pp6nylqYUecJnQvKwF1lwffDBEo3uyaTE7xnD6ioURvW6AznKWPkuwPzp6waSjWXnhcRZLanIfh6Is92VJG6XwaQftny+7KyFp7cPDFINUQ2ZGRL91s8b9yFKGioNbPVMmh7kIkvxGoLoCpruKHfvBWCEQ==,iv:CR2uo0kdOP/1TCh1y06lhRP86C7HIJ1PVjBn9KMBVsU=,tag:l07D3fzJZICKbokIqa9xMg==,type:str]
  # API server specific configuration options.
  apiServer:
    # Extra certificate subject alternative names for the API server's certificate.
    certSANs:
      - 10.10.0.9
      # # The container image used in the API server manifest.
      # image: k8s.gcr.io/kube-apiserver:v1.23.1
  # Controller manager server specific configuration options.
  controllerManager: {}
  # # The container image used in the controller manager manifest.
  # image: k8s.gcr.io/kube-controller-manager:v1.23.1
  # Kube-proxy server-specific configuration options
  proxy: {}
  # # The container image used in the kube-proxy manifest.
  # image: k8s.gcr.io/kube-proxy:v1.23.1
  # Scheduler server specific configuration options.
  scheduler: {}
  # # The container image used in the scheduler manifest.
  # image: k8s.gcr.io/kube-scheduler:v1.23.1
  # Configures cluster member discovery.
  discovery:
    # Enable the cluster membership discovery feature.
    enabled: true
    # Configure registries used for cluster member discovery.
    registries:
      # Kubernetes registry uses Kubernetes API server to discover cluster members and stores additional information
      kubernetes: {}
      # Service registry is using an external service to push and pull information about cluster members.
      service: {}
      # # External service endpoint.
      # endpoint: https://discovery.talos.dev/
  # Etcd specific configuration options.
  etcd:
    # The `ca` is the root certificate authority of the PKI.
    ca:
      crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJmakNDQVNTZ0F3SUJBZ0lSQUpTRVZ1VkJlcXVIVm9DVFJNS2lqWGN3Q2dZSUtvWkl6ajBFQXdJd0R6RU4KTUFzR0ExVUVDaE1FWlhSalpEQWVGdzB5TWpBeU1qWXlNRE0zTXpkYUZ3MHpNakF5TWpReU1ETTNNemRhTUE4eApEVEFMQmdOVkJBb1RCR1YwWTJRd1dUQVRCZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DQUFSdXZLU1NEOFJICmhjdXhVSGtIdU5HQ0EzbWtBYk45MUUyVGVwYUV3VGJpRUczVTJXazh4d0xOTHJLQktwM0l2eGQraEw2Q0hHeWUKcnViUVZHdWVhbDVobzJFd1h6QU9CZ05WSFE4QkFmOEVCQU1DQW9Rd0hRWURWUjBsQkJZd0ZBWUlLd1lCQlFVSApBd0VHQ0NzR0FRVUZCd01DTUE4R0ExVWRFd0VCL3dRRk1BTUJBZjh3SFFZRFZSME9CQllFRkNwU09rS1RhVG96CjZDTFlMTGpIbjJRdU13cVdNQW9HQ0NxR1NNNDlCQU1DQTBnQU1FVUNJR3JLWTVhb3dPTUhENDB4YmxsQTRLRi8KQjB3QW5SV0pNblVxQzlkbnJpYW5BaUVBZ2VQK3Q5WmhLNkJUUGlmbFlHZ042TUVsYXFTTC9XY05ERUxiVnBhNApuV3M9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
      key: ENC[AES256_GCM,data:XKNy7fJbKsQQMt9Y87baTK0GmGZ8alyd0FotLSgybxILVOV9Tjn6iZU4sc08UQxYzji6RDRrB+33qOgIfF7lb5lB9OmhdhirgzFbAHmQsucauMW07VAckTvJknQwRxuqFkRSAreRVB7jymAQy5iKBmBaCQqn46Ohm1oAqQfRe6/a9EZEqTSeQWsSGVpJFEGqG2vgVVEM2eATVXtQtBS2MggZYOTtFhI7Wrmj1T9IJyHEivLMFQD9lDV2IHkhvI+EHhSRBQnHvSzCvMLBavX+eIE65CU0v7gaCJ+El/0MHsSGirowlI6wpZGNM4GnNo+4EPbJ4m7z1oBVZGaADemHYpITCIkrKG9JqUT+txZ+g/QpCF6ZKvcdxRWt5cIXOiRIGGFF0yzuUouAfndhxtIH5w==,iv:iZw2ie08Ff2zWgEBPYEavAN+IMM4GdUmzYyS1JvLnAc=,tag:0Tpj4reOdA/fB63YsT7nrQ==,type:str]
      # # The container image used to create the etcd service.
      # image: gcr.io/etcd-development/etcd:v3.5.1
      # # The subnet from which the advertise URL should be.
      # subnet: 10.0.0.0/8
  # A list of urls that point to additional manifests.
  extraManifests: []
  #   - https://www.example.com/manifest1.yaml
  #   - https://www.example.com/manifest2.yaml
  # A list of inline Kubernetes manifests.
  inlineManifests: []
  #   - name: namespace-ci # Name of the manifest.
  #     contents: |- # Manifest contents as a string.
  #       apiVersion: v1
  #       kind: Namespace
  #       metadata:
  #           name: ci
# # Core DNS specific configuration options.
# coreDNS:
#     image: docker.io/coredns/coredns:1.8.7 # The `image` field is an override to the default coredns image.
# # External cloud provider configuration.
# externalCloudProvider:
#     enabled: true # Enable external cloud provider.
#     # A list of urls that point to additional manifests for an external cloud provider.
#     manifests:
#         - https://raw.githubusercontent.com/kubernetes/cloud-provider-aws/v1.20.0-alpha.0/manifests/rbac.yaml
#         - https://raw.githubusercontent.com/kubernetes/cloud-provider-aws/v1.20.0-alpha.0/manifests/aws-cloud-controller-manager-daemonset.yaml
# # A map of key value pairs that will be added while fetching the extraManifests.
# extraManifestHeaders:
#     Token: "1234567"
#     X-ExtraInfo: info
# # Settings for admin kubeconfig generation.
# adminKubeconfig:
#     certLifetime: 1h0m0s # Admin kubeconfig certificate lifetime (default is 1 year).
sops:
  kms: []
  gcp_kms: []
  azure_kv: []
  hc_vault: []
  age:
    - recipient: age189npag0lz2hl425ldurk8czrpyv69tg4cgqgzl7wjh60w39sysesazu4u6
      enc: |
        -----BEGIN AGE ENCRYPTED FILE-----
        YWdlLWVuY3J5cHRpb24ub3JnL3YxCi0+IFgyNTUxOSBxR2ZkVG5EUHMwc0cyTGJR
        QXJndFN0L3RRRU5vSFAyUUhtcEVqZFdjZFNrCmhiUmNhV3oza2hkTnlIMkpjNno0
        OVFhNG02N2d6NkxqUnQwN2pubmF1ZHMKLS0tIDUzMllvMHVUM1lGZmpkTm5IcVhT
        VGp1UnF5OEJjSEtuTDhUODJxKzhTVzQKBGh/DbtlbZLwrwyT4TAsOsHEpt8MahPH
        jr38X7C1nxv0ucLJwvbyckOLGD5Kc+9kJyCdzip5+5+/XZw81PJenA==
        -----END AGE ENCRYPTED FILE-----
  lastmodified: "2022-03-04T04:17:34Z"
  mac: ENC[AES256_GCM,data:342sYfLIS0drgMIgtRq+K5xpshtHMgiuvNrK8sPMtWwisrw+FBIPIM3y6VNh+B2dseWtw7VJfqT7po59IDUlTD70+QSU53ENTcZYrOwcV2dLGZq1FhIG0SHSqxf/5ODLaZYzXXNDAZmnxlOZMCO19CEhIXW5Jm/lNTk4mPmgSBo=,iv:YxiWOnsmWChJop4WjgepgwQRJPZ5BOiFzvY+ZJNICmI=,tag:gcxG+2ojr083HmFWvHGBnA==,type:str]
  pgp:
    - created_at: "2022-03-04T04:17:34Z"
      enc: |-
        -----BEGIN PGP MESSAGE-----

        wcBMA2CLnufVS/bWAQgAjFGaz4O/UOIUTIV/OMIrM9A+mDMVUMtmQerIZTwRLL7K
        8quyr8UX+HkcG78/eyPJiqQ4y8WPbteP6qO8LzVtck+qu47byhnuBONL6a0VEqr9
        CXl/F3bKe7rB0kjKzfjVt/5eEB/eoEeeo9gOPJAGQ1MySxn6tXr9yzAvMpPXBypK
        wIeAkNDESkAcRgvA+raOueAXeR5vj6ajkiT2aN3n0OIU9y1L2yi6gmCUWtzKa7Q/
        +/B7JeuGZ+lVUGkeJRHBAlLjFQe4mSFQLr1h24erGlSMwxbfXDR/XZQChuEDrDus
        Mvv35HgHxrUceAFU8dKmhGY+xG0vBgj+cFoMFqoIi9LmAQkqiRB+07Wnc3eiWIOh
        rByTJjDH9dRyvkQfAICSiKIh+haL1ObHbwN0W+8J6LV+VWuXZ6oZMBWbOLdoggYD
        K+S6ifgRPV5ZnLWg6MhRV//y4m37iIUA
        =KGwS
        -----END PGP MESSAGE-----
      fp: 43A697C7D3B8377EB8A0E7C127DDBC18CC4F3E04
  encrypted_regex: ((?i)(pass|secret($|[^N])|key|token|^data$|^stringData))
  version: 3.7.1
