
# Default values for deluge.

image:
  repository: linuxserver/deluge
  pullPolicy: IfNotPresent
  tag: version-2.0.3-2201906121747ubuntu18.04.1

strategy:
  type: Recreate

service:
  port:
    port: 8112

persistence:
  config:
    enabled: false
    emptyDir: false
    mountPath: /config

  downloads:
    enabled: false
    emptyDir: false
    mountPath: /downloads
    ## Persistent Volume Storage Class
    ## If defined, storageClassName: <storageClass>
    ## If set to "-", storageClassName: "", which disables dynamic provisioning
    ## If undefined (the default) or set to null, no storageClassName spec is
    ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
    ##   GKE, AWS & OpenStack)
    # storageClass: "-"
    # accessMode: ReadWriteOnce
    # size: 1Gi
    ## Do not delete the pvc upon helm uninstall
    # skipuninstall: false
    # existingClaim: ""

env: {}
  ## Optional ENV Vars that can be set.
  ## All values below are the current default values.
  # PUID: "1000"
  # PGID: "1000"
  # TZ: "Europe/London"
  # UMASK_SET: "022"
  # DELUGE_LOGLEVEL: "error"

addons:

  # Enable running a VPN in the pod to route traffic through a VPN
  vpn:
    enabled: true
    type: wireguard

    # WireGuard specific configuration
    wireguard:
      image:
        repository: k8sathome/wireguard
        pullPolicy: IfNotPresent
        tag: 1.0.20200827

    # Set the VPN container securityContext
    securityContext:
      capabilities:
        add:
          - NET_ADMIN
          - SYS_MODULE
      # All variables specified here will be added to the vpn sidecar container
    # See the documentation of the VPN image for all config values
    env: {}
    # TZ: UTC

    # Provide a customized vpn configuration file to be used by the VPN.
    configFile:  # |-
      # Some Example Config
      # remote greatvpnhost.com 8888
      # auth-user-pass
      # Cipher AES

    # Provide custom up/down scripts that can be used by the vpnConf
#    scripts:
#      up:  # |-
#        # #!/bin/bash
#        # echo "connected" > /shared/vpnstatus
#      down:  # |-
#        # #!/bin/bash
#        # echo "disconnected" > /shared/vpnstatus

#    additionalVolumeMounts: []

