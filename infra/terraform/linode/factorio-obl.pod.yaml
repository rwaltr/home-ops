# Save the output of this file and use kubectl create -f to import
# it into Kubernetes.
#
# Created with podman-4.3.1

# NOTE: If you generated this yaml from an unprivileged and rootless podman container on an SELinux
# enabled system, check the podman generate kube man page for steps to follow to ensure that your pod/container
# has the right permissions to access the volumes added.
---
apiVersion: v1
kind: Pod
metadata:
  annotations:
    io.kubernetes.cri-o.TTY/factorio: "false"
    io.podman.annotations.autoremove/factorio: "FALSE"
    io.podman.annotations.init/factorio: "FALSE"
    io.podman.annotations.privileged/factorio: "FALSE"
    io.podman.annotations.publish-all/factorio: "FALSE"
  creationTimestamp: "2022-12-28T03:01:47Z"
  labels:
    app: factorio-pod
  name: factorio-pod
spec:
  automountServiceAccountToken: false
  containers:
    - env:
        - name: SAVE_NAME
          value: obl
        - name: GENERATE_NEW_SAVE
          value: "false"
        - name: LOAD_LATEST_SAVE
          value: "true"
      image: docker.io/factoriotools/factorio:latest
      name: factorio
      ports:
        - containerPort: 27015
          hostPort: 27015
        - containerPort: 34197
          hostPort: 34197
          protocol: UDP
      securityContext:
        capabilities:
          drop:
            - CAP_MKNOD
            - CAP_NET_RAW
            - CAP_AUDIT_WRITE
      volumeMounts:
        - mountPath: /factorio
          name: factorio-pvc
  enableServiceLinks: false
  volumes:
    - name: factorio-pvc
      persistentVolumeClaim:
        claimName: factorio

---
# https://kubernetes.io/docs/concepts/storage/persistent-volumes/
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: factorio
  namespace: default
  labels:
    app: factorio
spec:
  storageClassName: linode-block-storage
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 2Gi
---

